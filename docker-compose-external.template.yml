version: '3'

services: #if $pgpool_ip == $ip
  pgpool:
    build:
      context: PostDock/
      dockerfile: Pgpool-latest.Dockerfile
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      PCP_USER: pcp_user
      PCP_PASSWORD: pcp_pass
      WAIT_BACKEND_TIMEOUT: 30

      CHECK_USER: postgres
      CHECK_PASSWORD: dino.dev
      CHECK_PGCONNECT_TIMEOUT: 3 #timout for checking if primary node is healthy

      DB_USERS: postgres:dino.dev # in format user:password[,user:password[...]]
      BACKENDS: "0:pgmaster.host:${pgmaster_port}:1:/var/lib/postgresql/data:ALLOW_TO_FAILOVER,1:pgslave1.host:${pgslave1_port}:::,3:pgslave3.host:${pgslave3_port}:::,2:pgslave2.host:${pgslave2_port}:::" #,4:pgslave4 DOES_NOT_EXIST::::
      REQUIRE_MIN_BACKENDS: 3 # minimal number of backends to start pgpool (some might be unreachable)
      CONFIGS: "num_init_children:250,max_pool:5"
            # in format variable1:value1[,variable2:value2[,...]]
            # used for pgpool.conf file
    network_mode: host
    restart: always
    expose:
      - 5432
      - 9898
    extra_hosts:
      - "pgmaster.host:${pgmaster_ip}"
      - "pgslave1.host:${pgslave1_ip}"
      - "pgslave2.host:${pgslave2_ip}"
      - "pgslave3.host:${pgslave3_ip}"
      - "pgslave4.host:${pgslave4_ip}"
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
#end if

#if $queue_ip == $ip
  queue:
    image: rabbitmq:3-management
    container_name: wmc-queue-external
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    network_mode: host
    restart: always
    expose:
      - 15672
      - 5672
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
#end if

#if $session_ip == $ip
  session:
    image: redis:alpine
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    network_mode: host
    restart: always
    expose:
      - 6379
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
#end if

#if $ip in $app_ip
  app:
    working_dir: /var/wmc_loyalty
    hostname: app.host
    volumes:
      - ./build:/var/wmc_loyalty
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /wmc-app-log:/var/log/wmc-app
    build:
      context: .
      dockerfile: dockerfile-app
    command: ['/wait/wait-for-it.sh', 'pgpool.host:5432', '-t', '600', '--', '/var/wmc-app.sh']
    network_mode: host
    expose:
      - 8080
    restart: always
    environment:
      spring.datasource.url: "jdbc:postgresql://pgpool.host:5432/wmc_loyalty"
      spring.datasource.username: "postgres"
      spring.datasource.password: "dino.dev"
      spring.batch.initializer.enabled: "false"
      server.port: 8080
      queues.posjob.host: queue.host
      spring.redis.host: session.host
      spring.redis.port: 6379
      spring.redis.password: ""
      spring.session.store-type: redis
      spring.mvc.locale: en
      SERVICE_NAME: app
      SERVICE_TAGS: production
      spring.datasource.hikari.maximum-pool-size: 10
      spring.datasource.hikari.minimum-idle: 1
      spring.datasource.hikari.idle-timeout: 30000
      spring.datasource.hikari.connection-timeout: 60000
      spring.datasource.hikari.validation-timeout: 3000
      spring.datasource.hikari.max-lifetime: 600000
      wmc.pos.endpoint: http://192.168.1.235/wmcvip/MemberService.svc
      cron.report.process.expression: "1 1 0 * * *"
      cron.daily: "1 0 0 * * *"
      spring.mail.host: retail.smtp.com
      spring.mail.port: 25
      spring.mail.username: wmcprestige
      spring.mail.password: ""
      mail.pattern: a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;1;2;3;4;5;6;7;8;9;0 

      asset.versioning.mode: manual
      asset.versioning.strategy: fixed
      asset.fixed.version.type: string
      asset.fixed.version.value: 20171005
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
    extra_hosts:
      - "pgpool.host:$pgpool_ip"
      - "queue.host:$queue_ip"
      - "session.host:$session_ip"
      - "app.host:$ip"
#end if

#if $ip in $api_ip
  api:
    working_dir: /var/wmc_loyalty
    hostname: api.host
    build:
      context: .
      dockerfile: dockerfile-api
    command: ['/wait/wait-for-it.sh', 'pgpool.host:5432', '-t', '600', '--', '/var/wmc-api.sh']
    network_mode: host
    expose:
      - 8081
    volumes:
      - ./build:/var/wmc_loyalty
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: always
    environment:
      # ref: https://jdbc.postgresql.org/documentation/head/connect.html
      spring.datasource.url: "jdbc:postgresql://pgpool.host:5432/wmc_loyalty"
      spring.datasource.username: "postgres"
      spring.datasource.password: "dino.dev"
      spring.batch.initializer.enabled: "false"
      server.port: 8081
      spring.datasource.hikari.maximum-pool-size: 10
      spring.datasource.hikari.idle-timeout: 600000
      spring.datasource.hikari.connection-timeout: 600000
      spring.datasource.hikari.validation-timeout: 3000
      spring.datasource.hikari.max-lifetime: 600000
      spring.datasource.test-while-idle: "true"
      spring.datasource.test-on-borrow: "true"
      spring.datasource.testOnBorrow: "true"
      spring.datasource.time-between-eviction-runs-millis: 25000
      spring.datasource.timeBetweenEvictionRunsMillis: 25000
      spring.datasource.validation-query: "SELECT 1"
      spring.datasource.validationQuery: "SELECT 1"
      spring.mail.host: retail.smtp.com
      spring.mail.port: 25
      spring.mail.username: wmcprestige
      spring.mail.password: ""
      mail.pattern: a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;1;2;3;4;5;6;7;8;9;0
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
    extra_hosts:
      - "pgpool.host:$pgpool_ip"
      - "queue.host:$queue_ip"
      - "api.host:$ip"
#end if

#if $ip in $job_ip
  job:
    working_dir: /var/wmc_loyalty
    hostname: job.host
    image: 127.0.0.1:5000/job
    build:
      context: .
      dockerfile: dockerfile-job
    command: ['/wait/wait-for-it.sh', 'pgpool.host:5432', '-t', '600', '--', '/var/wmc-job.sh']
    network_mode: host
    restart: always
    expose:
      - 8084
    volumes:
      - ./build:/var/wmc_loyalty
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      # ref: https://jdbc.postgresql.org/documentation/head/connect.html
      spring.datasource.url: "jdbc:postgresql://pgpool.host:5432/wmc_loyalty"
      spring.datasource.username: "postgres"
      spring.datasource.password: "dino.dev"
      spring.batch.initializer.enabled: "false"
      server.port: 8084
      spring.datasource.hikari.maximum-pool-size: 10
      spring.datasource.hikari.idle-timeout: 600000
      spring.datasource.hikari.connection-timeout: 600000
      spring.datasource.hikari.validation-timeout: 3000
      spring.datasource.hikari.max-lifetime: 600000
      spring.datasource.test-while-idle: "true"
      spring.datasource.test-on-borrow: "true"
      spring.datasource.testOnBorrow: "true"
      spring.datasource.time-between-eviction-runs-millis: 25000
      spring.datasource.timeBetweenEvictionRunsMillis: 25000
      spring.datasource.validation-query: "SELECT 1"
      spring.datasource.validationQuery: "SELECT 1"
      cron.report.process.expression: "1 1 0 * * *"
      cron.daily: "1 0 0 * * *"
      spring.mail.host: retail.smtp.com
      spring.mail.port: 25
      spring.mail.username: wmcprestige
      spring.mail.password: ""
      mail.pattern: a;b;c;d;e;f;g;h;i;j;k;l;m;n;o;p;q;r;s;t;u;v;w;x;y;z;1;2;3;4;5;6;7;8;9;0
#if $log_ip
    logging:
      driver: syslog
      options:
        tag: "{{.Name}}"
        syslog-address: "udp://${log_ip}:514"
#end if
    extra_hosts:
      - "pgpool.host:$pgpool_ip"
      - "job.host:$ip"
#end if

#if $ip in $proxy_ip
  proxy:
    image: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx/ssl:/var/ssl
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./nginx-log:/var/log/nginx-volume
    ports:
      - "80:80"
      - "443:443"
    # environment:
      # - NGINX_HOST=_loyalty.wmcvietnam.com
      # - NGINX_PORT=80
    # command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    command: /bin/bash -c "nginx -g 'daemon off;'"
#end if
